asyncapi: '2.0.0'
id: 'urn:com.asyncapi.pmdb.lifecycle'
info:
  title: onboarding-events
  version: '0.1.0'
  description: |
    Registered Partner lifecycle events.
servers:
  sit:
    url: TBD
    protocol: kafka
    description: non-prod env
    security:
      - cert: []
    variables:
      port:
        description: Secure connection (TLS) is available through port 9094.
        default: '9094'
        enum:
          - '9094'
components:
  securitySchemes:
    cert:
      type: X509
      description: Public Key Certificate
  schemas:
    name:
      type: string
      description: The name of the action
    action:
      type: string
      description: The action performed on the partner
      enum: [CREATED, CREATED_BY_API, UPDATED, DELETED]
    id:
      type: string
      description: Unique UUID
    guid:
      type: string
      description: Unique UUID
    version:
      type: integer
      description: The version of the payload
    createdBy:
      type: string
      description: The user that created this resource
    createdAt:
      type: string
      description: The date and time this resource was created
    updatedBy:
      type: string
      description: The user who last updated this resource
    updatedAt:
      type: string
      description: The date and time this resource was updated at
    isDeleted:
      type: string
      description: Denotes if the resource is deleted or not ("N", "Y)
    actor:
      type: object
      properties:
        id:
          "$ref": '#/components/schemas/id'
        name:
          type: string
          description: Name of the actor who performed the operation

    data:
      type: object
      properties:
        action:
          "$ref": '#/components/schemas/action'
        guid:
          "$ref": '#/components/schemas/guid'
        partnerName:
          type: string
          description: The name of the partner
        partyLevel:
          type: integer
          description: Numeric identifier that denotes the level of the partnership
          examples:
          - 3
        partyLevelName:
          type: string
          description: The level of the partnership
        partnerTypeCode:
          type: string
          description: The type of partner
        partnerTypeName:
          type: string
          description: The type of partner
        partnerStatusCode:
          type: string
          description: The status of the partner
        partnerStatusName:
          type: string
          description: The status of the partner
        companyRegistrationNumber:
          type: string
          description: The partner's company registration number
        tradingAsName:
          type: string
          description: The name this partner trades under
        tradingAsNameLocal:
          type: string
          description: Localised version of the name the partner trades under
        website:
          type: string
          description: The partner's website
        phone:
          type: string
          description: The partner's phone number
        remarks:
          type: string
          description: Comments on the partner
        registeredCountryIsoCode:
          type: string
          description: The partner's ISO country code
        registeredCountryName:
          type: string
          description: The registered country name
        sourceSystem:
          type: string
          description: The source of this change
        sourceSystemPartnerId:
          type: string
          description: The Id of the source system
        agreementType:
          type: string
          description: The agreement type the partner has signed
          enum: [GDPA, GDPA_PS5]
        executionDate:
          type: string
          description: The date this action was executed
        executionDateTime:
          type: string
          description: The date and time this action was executed
        updatedBy:
          "$ref": '#/components/schemas/updatedBy'
        updatedAt:
          "$ref": '#/components/schemas/updatedAt'
        createdBy:
          "$ref": '#/components/schemas/createdBy'
        createdAt:
          "$ref": '#/components/schemas/createdAt'
        version:
          "$ref": '#/components/schemas/version'
        iarcEmail:
          type: string
          description: The partner's IARC email address
        iarcPublicEmail:
          type: string
          description: The partner's public IARC email address
        isDeleted:
          "$ref": '#/components/schemas/isDeleted'
        spids:
          "$ref": '#/components/schemas/spids'
        contacts:
          "$ref": '#/components/schemas/contacts'
        addresses:
          "$ref": '#/components/schemas/addresses'
        ipAddressRanges:
          "$ref": '#/components/schemas/ipAddressRanges'

    spids:
      type: array
      items:
        $ref: '#/components/schemas/spidItem'

    addresses:
      type: array
      items:
        $ref: '#/components/schemas/address'

    contacts:
      type: array
      items:
        $ref: '#/components/schemas/contact'

    ipAddressRanges:
      type: array
      items:
        $ref: '#/components/schemas/ipAddressRange'

    spidItem:
      type: object
      description: Service Provider used by a partner
      properties:
        id:
          $ref: '#/components/schemas/id'
        spid:
          type: string
          description: The ID of the service provider
        serviceProviderName:
          type: string
          description: The name of the servicer provider
        guid:
          $ref: '#/components/schemas/guid'
        regionCode:
          type: string
          description: The code of the region
        regionName:
          type: string
          description: The name of the region defined by the region code
        createdBy:
          "$ref": '#/components/schemas/createdBy'
        updatedBy:
          "$ref": '#/components/schemas/updatedBy'
        createdAt:
          "$ref": '#/components/schemas/createdAt'
        updatedAt:
          "$ref": '#/components/schemas/updatedAt'
        version:
          "$ref": '#/components/schemas/version'
        isDeleted:
          "$ref": '#/components/schemas/isDeleted'

    address:
      type: object
      description: Partner's address
      properties:
        action:
          "$ref": '#/components/schemas/action'
        partnerAddressId:
          type: integer
          description: The ID that uniquely identifies this address
        addressTypeCode:
          type: string
          description: The code that describes the type of the address
          examples:
          - HQ
        addressTypeName:
          type: string
          description: The full name of the type of the address
          examples:
          - HeadQuarters
        guid:
          "$ref": '#/components/schemas/guid'
        addressLine1:
          type: string
          description: First line of address
        addressLineLocal:
          type: string
          description: First line of address localised
        addressLine2:
          type: string
          description: Second line of address
        addressLine2Local:
          type: string
          description: Second line of address localised
        cityTown:
          type: string
          description: The city/ town of this address
        cityTownLocal:
          type: string
          description: The local name of the city/ town of this address
        stateProvinceRegionCounty:
          type: string
          description: The state/province/region/county of this address
        stateProvinceRegionCountyLocal:
          type: string
          description: The local name of the state/province/region/county of this address
        countryIsoCode:
          type: string
          description: The ISO country code of this address
        countryName:
          type: string
          description: The name of the country the ISO code corresponds to
        zipPostCode:
          type: string
          description: The zip/ post code of this address
        effectiveDate:
          type: string
          description: The date this change is effective from
        inactiveDate:
          type: string
          description: The date this address has be deactivated
        isActive:
          type: string
          description: Denotes whethere this address is active or not
        createdAt:
          "$ref": '#/components/schemas/createdAt'
        updatedAt:
          "$ref": '#/components/schemas/updatedAt'
        version:
          "$ref": '#/components/schemas/version'
        isDeleted:
          "$ref": '#/components/schemas/isDeleted'

    contact:
      type: object
      description: Partner's contact
      properties:
        action:
          "$ref": '#/components/schemas/action'
        id:
          "$ref": '#/components/schemas/id'
        oktaId:
          "$ref": '#/components/schemas/id'
        guid:
          "$ref": '#/components/schemas/guid'
        userName:
          type: string
          description: This contact's username
        firstName:
          type: string
          description: This contact's first name
        lastName:
          type: string
          description: This contact's last name
        email:
          type: string
          description: This contact's email address
        emailNotification:
          type: string
          description: Denotes if the person using this email address has consented to receive email notifications
        phone:
          type: string
          description: This contanct's phone number
        phoneExtension:
          type: string
          description: The extension for the phone number
        roleId:
          type: number
          description: This contact's associated role ID
        jobTitle:
          type: string
          description: This contact's job title
        contactType:
          type: string
          description: Denotes this contact's type
          examples:
          - PRIMARY_CONTACT
        createdAt:
          "$ref": '#/components/schemas/createdAt'
        updatedAt:
          "$ref": '#/components/schemas/updatedAt'
        version:
          "$ref": '#/components/schemas/version'

    ipAddressRange:
      type: object
      description: Partner's IP range
      properties:
        action:
          "$ref": '#/components/schemas/action'
        id:
          "$ref": '#/components/schemas/id'
        guid:
          "$ref": '#/components/schemas/guid'
        minIpAddress:
          type: string
          description: The min IP in the range specified
        maxIpAddress:
          type: string
          description: The max IP in the range specified
        ipRange:
          type: string
          description: The full IP range
        createdBy:
          "$ref": '#/components/schemas/createdBy'
        updatedBy:
          "$ref": '#/components/schemas/updatedBy'
        createdAt:
          "$ref": '#/components/schemas/createdAt'
        updatedAt:
          "$ref": '#/components/schemas/updatedAt'
        version:
          "$ref": '#/components/schemas/version'
        isDeleted:
          "$ref": '#/components/schemas/isDeleted'

  messages:
    partner-onboarded-events:
      summary: Partner onboarding lifecycle events
      description: |
        Events published from onboarding service
      tags:
      - name: partner
      bindings:
        mqtt:
          cleanSession: false
          clientId: pmdb_default
      payload:
        type: object
        properties:
          action:
            "$ref": '#/components/schemas/action'
          id:
            "$ref": '#/components/schemas/action'
          name:
            type: string
            description: The full name of the event
          group:
            type: string
            description: The group the service that originated the event belongs
          source:
            type: string
            description: The source of the event
          target:
            type: string
            description: The target of this event
          targetType:
            type: string
            description: The target type of this event
          timestamp:
            type: string
            description: The timestamp when the event was triggered
          context:
            type: array
            items:
              type: string

          version:
            "$ref": '#/components/schemas/version'
          actor:
            "$ref": '#/components/schemas/actor'
          data:
            "$ref": '#/components/schemas/data'



channels:
  # Partner Events
  onboarding/partner/onboarded/e1-np/1.0:
    publish:
      operationId: partnerOnboarded
      summary: Partner was onboarded
      message:
        "$ref": "#/components/messages/partner-onboarded-events"
